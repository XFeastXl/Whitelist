local players = game:GetService("Players")
local myCharacter = game:GetService("Players").LocalPlayer.Character
local nearestPlayer = nil
local nearestDistance = 40
local repeatAttack = true

-- Function to find the nearest player
local function findNearestPlayer()
    nearestPlayer = nil
    nearestDistance = 40
    for _, player in pairs(players:GetPlayers()) do
        if player ~= game:GetService("Players").LocalPlayer then
            local character = player.Character
            if character then
                local distance = (myCharacter.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                if distance <= nearestDistance then
                    nearestPlayer = player
                    nearestDistance = distance
                end
            end
        end
    end
end

-- Function to attack the nearest player
local function attackNearestPlayer()
    if nearestPlayer then
        local args = {
            [1] = 3,
            [2] = nearestPlayer
        }
        game:GetService("ReplicatedStorage").remoteInterface.interactions.meleePlayer:FireServer(unpack(args))
    end
end

-- Repeat the process until stopped
while repeatAttack do
    findNearestPlayer()
    attackNearestPlayer()
    wait(0.1) -- adjust the delay as needed
end

-- Listen for the "M" key press to stop the attack
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.M then
        repeatAttack = false
    end
end)
